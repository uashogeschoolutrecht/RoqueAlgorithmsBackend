// <auto-generated />
using System;
using FakeNewsBackend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FakeNewsBackend.Migrations
{
    [DbContext(typeof(WebsiteContext))]
    [Migration("20221012134922_added-sitemap")]
    partial class addedsitemap
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FakeNewsBackend.Domain.RobotRules", b =>
                {
                    b.Property<int>("WebsiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WebsiteId"));

                    b.Property<string>("AllowedLinks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DisallowedLinks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("WebsiteId");

                    b.ToTable("Rules", "public");
                });

            modelBuilder.Entity("FakeNewsBackend.Domain.WebSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfArticles")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfArticlesScraped")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("rulesWebsiteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("rulesWebsiteId");

                    b.ToTable("Websites", "public");
                });

            modelBuilder.Entity("FakeNewsBackend.Domain.WebSite", b =>
                {
                    b.HasOne("FakeNewsBackend.Domain.RobotRules", "rules")
                        .WithMany()
                        .HasForeignKey("rulesWebsiteId");

                    b.Navigation("rules");
                });
#pragma warning restore 612, 618
        }
    }
}
